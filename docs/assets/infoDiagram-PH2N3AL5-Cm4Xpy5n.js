import{_ as r,l as e,I as s,d as t,K as a}from"./mermaid-BGnxfgCD.js";import{p as i}from"./radar-MK3ICKWK-BhxDMxL5.js";import"./index-D3XtisvU.js";import"./transform-DjHZbYKP.js";import"./timer-DFzT7np-.js";import"./step-BwsUM5iJ.js";import"./_baseEach-DHNYGtOc.js";import"./_baseUniq-BlNMZyiw.js";import"./min-DUpp_rh3.js";import"./_baseMap-BXW0_SVK.js";import"./clone-DZLovMrS.js";import"./_createAggregator-ReXtltZy.js";var o={parse:r((async r=>{const s=await i("info",r);e.debug(s)}),"parse")},n={version:a.version},p={parser:o,db:{getVersion:r((()=>n.version),"getVersion")},renderer:{draw:r(((r,a,i)=>{e.debug("rendering info diagram\n"+r);const o=s(a);t(o,100,400,!0);o.append("g").append("text").attr("x",100).attr("y",40).attr("class","version").attr("font-size",32).style("text-anchor","middle").text(`v${i}`)}),"draw")}};export{p as diagram};
