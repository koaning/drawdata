import{y as e}from"./index-D3XtisvU.js";const s=e=>e.flatMap(t),t=e=>T(n(e)).map(r),r=e=>e.replace(/ +/g," ").trim(),n=e=>({type:"mandatory_block",items:E(e,0)[0]}),E=(e,s,t)=>{const r=[];for(;e[s];){const[n,E]=i(e,s);if(r.push(n),"|"!==e[s=E]){if("}"===e[s]||"]"===e[s]){if(t!==e[s])throw new Error(`Unbalanced parenthesis in: ${e}`);return[r,++s]}if(s===e.length){if(t)throw new Error(`Unbalanced parenthesis in: ${e}`);return[r,s]}throw new Error(`Unexpected "${e[s]}"`)}s++}return[r,s]},i=(e,s)=>{const t=[];for(;;){const[r,n]=a(e,s);if(!r)break;t.push(r),s=n}return 1===t.length?[t[0],s]:[{type:"concatenation",items:t},s]},a=(e,s)=>{if("{"===e[s])return o(e,s+1);if("["===e[s])return _(e,s+1);{let t="";for(;e[s]&&/[A-Za-z0-9_ ]/.test(e[s]);)t+=e[s],s++;return[t,s]}},o=(e,s)=>{const[t,r]=E(e,s,"}");return[{type:"mandatory_block",items:t},r]},_=(e,s)=>{const[t,r]=E(e,s,"]");return[{type:"optional_block",items:t},r]},T=e=>{if("string"==typeof e)return[e];if("concatenation"===e.type)return e.items.map(T).reduce(l,[""]);if("mandatory_block"===e.type)return e.items.flatMap(T);if("optional_block"===e.type)return["",...e.items.flatMap(T)];throw new Error(`Unknown node type: ${e}`)},l=(e,s)=>{const t=[];for(const r of e)for(const e of s)t.push(r+e);return t};var R,A;(A=R=R||(R={})).QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",A.IDENTIFIER="IDENTIFIER",A.STRING="STRING",A.VARIABLE="VARIABLE",A.RESERVED_DATA_TYPE="RESERVED_DATA_TYPE",A.RESERVED_PARAMETERIZED_DATA_TYPE="RESERVED_PARAMETERIZED_DATA_TYPE",A.RESERVED_KEYWORD="RESERVED_KEYWORD",A.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",A.RESERVED_PHRASE="RESERVED_PHRASE",A.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",A.RESERVED_CLAUSE="RESERVED_CLAUSE",A.RESERVED_SELECT="RESERVED_SELECT",A.RESERVED_JOIN="RESERVED_JOIN",A.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",A.ARRAY_KEYWORD="ARRAY_KEYWORD",A.CASE="CASE",A.END="END",A.WHEN="WHEN",A.ELSE="ELSE",A.THEN="THEN",A.LIMIT="LIMIT",A.BETWEEN="BETWEEN",A.AND="AND",A.OR="OR",A.XOR="XOR",A.OPERATOR="OPERATOR",A.COMMA="COMMA",A.ASTERISK="ASTERISK",A.PROPERTY_ACCESS_OPERATOR="PROPERTY_ACCESS_OPERATOR",A.OPEN_PAREN="OPEN_PAREN",A.CLOSE_PAREN="CLOSE_PAREN",A.LINE_COMMENT="LINE_COMMENT",A.BLOCK_COMMENT="BLOCK_COMMENT",A.DISABLE_COMMENT="DISABLE_COMMENT",A.NUMBER="NUMBER",A.NAMED_PARAMETER="NAMED_PARAMETER",A.QUOTED_PARAMETER="QUOTED_PARAMETER",A.NUMBERED_PARAMETER="NUMBERED_PARAMETER",A.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",A.CUSTOM_PARAMETER="CUSTOM_PARAMETER",A.DELIMITER="DELIMITER",A.EOF="EOF";const p=e=>({type:R.EOF,raw:"«EOF»",text:"«EOF»",start:e});p(1/0);const S=e=>s=>s.type===e.type&&s.text===e.text;S({text:"ARRAY",type:R.RESERVED_DATA_TYPE}),S({text:"BY",type:R.RESERVED_KEYWORD}),S({text:"SET",type:R.RESERVED_CLAUSE}),S({text:"STRUCT",type:R.RESERVED_DATA_TYPE}),S({text:"WINDOW",type:R.RESERVED_CLAUSE}),S({text:"VALUES",type:R.RESERVED_CLAUSE});const I=s(["SELECT [ALL | DISTINCT]"]),N=s(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL]","HAVING","WINDOW","PARTITION BY","ORDER BY [ALL]","LIMIT","OFFSET","USING SAMPLE","QUALIFY","INSERT [OR REPLACE] INTO","VALUES","DEFAULT VALUES","SET","RETURNING"]),c=s(["CREATE [OR REPLACE] [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]"]),m=s(["UPDATE","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","TRUNCATE","ALTER TABLE","ADD [COLUMN] [IF NOT EXISTS]","ADD PRIMARY KEY","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","RENAME [COLUMN]","RENAME TO","SET [DATA] TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","CREATE [OR REPLACE] [TEMPORARY | TEMP] {MACRO | FUNCTION}","DROP MACRO [TABLE] [IF EXISTS]","DROP FUNCTION [IF EXISTS]","CREATE [UNIQUE] INDEX [IF NOT EXISTS]","DROP INDEX [IF EXISTS]","CREATE [OR REPLACE] SCHEMA [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","CREATE [OR REPLACE] [PERSISTENT | TEMPORARY] SECRET [IF NOT EXISTS]","DROP [PERSISTENT | TEMPORARY] SECRET [IF EXISTS]","CREATE [OR REPLACE] [TEMPORARY | TEMP] SEQUENCE","DROP SEQUENCE [IF EXISTS]","CREATE [OR REPLACE] [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","DROP VIEW [IF EXISTS]","ALTER VIEW","CREATE TYPE","DROP TYPE [IF EXISTS]","ANALYZE","ATTACH [DATABASE] [IF NOT EXISTS]","DETACH [DATABASE] [IF EXISTS]","CALL","[FORCE] CHECKPOINT","COMMENT ON [TABLE | COLUMN | VIEW | INDEX | SEQUENCE | TYPE | MACRO | MACRO TABLE]","COPY [FROM DATABASE]","DESCRIBE","EXPORT DATABASE","IMPORT DATABASE","INSTALL","LOAD","PIVOT","PIVOT_WIDER","UNPIVOT","EXPLAIN [ANALYZE]","SET {LOCAL | SESSION | GLOBAL}","RESET [LOCAL | SESSION | GLOBAL]","{SET | RESET} VARIABLE","SUMMARIZE","BEGIN TRANSACTION","ROLLBACK","COMMIT","ABORT","USE","VACUUM [ANALYZE]","PREPARE","EXECUTE","DEALLOCATE [PREPARE]"]),h=s(["UNION [ALL | BY NAME]","EXCEPT [ALL]","INTERSECT [ALL]"]),u=s(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{NATURAL | ASOF} [INNER] JOIN","{NATURAL | ASOF} {LEFT | RIGHT | FULL} [OUTER] JOIN","POSITIONAL JOIN","ANTI JOIN","SEMI JOIN"]),O=s(["{ROWS | RANGE | GROUPS} BETWEEN","SIMILAR TO","IS [NOT] DISTINCT FROM","TIMESTAMP WITH TIME ZONE"]),y={name:"duckdb",tokenizerOptions:{reservedSelect:I,reservedClauses:[...N,...c,...m],reservedSetOperations:h,reservedJoins:u,reservedPhrases:O,supportsXor:!0,reservedKeywords:["ALL","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ATTACH","ASYMMETRIC","BOTH","CASE","CAST","CHECK","COLLATE","COLUMN","CONSTRAINT","CREATE","DEFAULT","DEFERRABLE","DESC","DESCRIBE","DETACH","DISTINCT","DO","ELSE","END","EXCEPT","FALSE","FETCH","FOR","FOREIGN","FROM","GRANT","GROUP","HAVING","IN","INITIALLY","INTERSECT","INTO","LATERAL","LEADING","LIMIT","NOT","NULL","OFFSET","ON","ONLY","OR","ORDER","PIVOT","PIVOT_LONGER","PIVOT_WIDER","PLACING","PRIMARY","REFERENCES","RETURNING","SELECT","SHOW","SOME","SUMMARIZE","SYMMETRIC","TABLE","THEN","TO","TRAILING","TRUE","UNION","UNIQUE","UNPIVOT","USING","VARIADIC","WHEN","WHERE","WINDOW","WITH"],reservedDataTypes:["ARRAY","BIGINT","BINARY","BIT","BITSTRING","BLOB","BOOL","BOOLEAN","BPCHAR","BYTEA","CHAR","DATE","DATETIME","DEC","DECIMAL","DOUBLE","ENUM","FLOAT","FLOAT4","FLOAT8","GUID","HUGEINT","INET","INT","INT1","INT128","INT16","INT2","INT32","INT4","INT64","INT8","INTEGER","INTEGRAL","INTERVAL","JSON","LIST","LOGICAL","LONG","MAP","NUMERIC","NVARCHAR","OID","REAL","ROW","SHORT","SIGNED","SMALLINT","STRING","STRUCT","TEXT","TIME","TIMESTAMP_MS","TIMESTAMP_NS","TIMESTAMP_S","TIMESTAMP_US","TIMESTAMP","TIMESTAMPTZ","TIMETZ","TINYINT","UBIGINT","UHUGEINT","UINT128","UINT16","UINT32","UINT64","UINT8","UINTEGER","UNION","USMALLINT","UTINYINT","UUID","VARBINARY","VARCHAR"],reservedFunctionNames:["ABS","ACOS","ADD","ADD_PARQUET_KEY","AGE","AGGREGATE","ALIAS","ALL_PROFILING_OUTPUT","ANY_VALUE","APPLY","APPROX_COUNT_DISTINCT","APPROX_QUANTILE","ARBITRARY","ARGMAX","ARGMIN","ARG_MAX","ARG_MAX_NULL","ARG_MIN","ARG_MIN_NULL","ARRAY_AGG","ARRAY_AGGR","ARRAY_AGGREGATE","ARRAY_APPEND","ARRAY_APPLY","ARRAY_CAT","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COSINE_SIMILARITY","ARRAY_CROSS_PRODUCT","ARRAY_DISTANCE","ARRAY_DISTINCT","ARRAY_DOT_PRODUCT","ARRAY_EXTRACT","ARRAY_FILTER","ARRAY_GRADE_UP","ARRAY_HAS","ARRAY_HAS_ALL","ARRAY_HAS_ANY","ARRAY_INDEXOF","ARRAY_INNER_PRODUCT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_POP_BACK","ARRAY_POP_FRONT","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUSH_BACK","ARRAY_PUSH_FRONT","ARRAY_REDUCE","ARRAY_RESIZE","ARRAY_REVERSE","ARRAY_REVERSE_SORT","ARRAY_SELECT","ARRAY_SLICE","ARRAY_SORT","ARRAY_TO_JSON","ARRAY_TO_STRING","ARRAY_TRANSFORM","ARRAY_UNIQUE","ARRAY_VALUE","ARRAY_WHERE","ARRAY_ZIP","ARROW_SCAN","ARROW_SCAN_DUMB","ASCII","ASIN","ATAN","ATAN2","AVG","BASE64","BIN","BITSTRING","BITSTRING_AGG","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_POSITION","BIT_XOR","BOOL_AND","BOOL_OR","CARDINALITY","CBRT","CEIL","CEILING","CENTURY","CHECKPOINT","CHR","COLLATIONS","COL_DESCRIPTION","COMBINE","CONCAT","CONCAT_WS","CONSTANT_OR_NULL","CONTAINS","COPY_DATABASE","CORR","COS","COT","COUNT","COUNT_IF","COUNT_STAR","COVAR_POP","COVAR_SAMP","CREATE_SORT_KEY","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_DATE","CURRENT_LOCALTIME","CURRENT_LOCALTIMESTAMP","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SETTING","CURRENT_USER","CURRVAL","DAMERAU_LEVENSHTEIN","DATABASE_LIST","DATABASE_SIZE","DATEDIFF","DATEPART","DATESUB","DATETRUNC","DATE_ADD","DATE_DIFF","DATE_PART","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECADE","DECODE","DEGREES","DISABLE_CHECKPOINT_ON_SHUTDOWN","DISABLE_OBJECT_CACHE","DISABLE_OPTIMIZER","DISABLE_PRINT_PROGRESS_BAR","DISABLE_PROFILE","DISABLE_PROFILING","DISABLE_PROGRESS_BAR","DISABLE_VERIFICATION","DISABLE_VERIFY_EXTERNAL","DISABLE_VERIFY_FETCH_ROW","DISABLE_VERIFY_PARALLELISM","DISABLE_VERIFY_SERIALIZER","DIVIDE","DUCKDB_COLUMNS","DUCKDB_CONSTRAINTS","DUCKDB_DATABASES","DUCKDB_DEPENDENCIES","DUCKDB_EXTENSIONS","DUCKDB_FUNCTIONS","DUCKDB_INDEXES","DUCKDB_KEYWORDS","DUCKDB_MEMORY","DUCKDB_OPTIMIZERS","DUCKDB_SCHEMAS","DUCKDB_SECRETS","DUCKDB_SEQUENCES","DUCKDB_SETTINGS","DUCKDB_TABLES","DUCKDB_TEMPORARY_FILES","DUCKDB_TYPES","DUCKDB_VIEWS","EDIT","EDITDIST3","ELEMENT_AT","ENABLE_CHECKPOINT_ON_SHUTDOWN","ENABLE_OBJECT_CACHE","ENABLE_OPTIMIZER","ENABLE_PRINT_PROGRESS_BAR","ENABLE_PROFILE","ENABLE_PROFILING","ENABLE_PROGRESS_BAR","ENABLE_VERIFICATION","ENCODE","ENDS_WITH","ENTROPY","ENUM_CODE","ENUM_FIRST","ENUM_LAST","ENUM_RANGE","ENUM_RANGE_BOUNDARY","EPOCH","EPOCH_MS","EPOCH_NS","EPOCH_US","ERA","ERROR","EVEN","EXP","FACTORIAL","FAVG","FDIV","FILTER","FINALIZE","FIRST","FLATTEN","FLOOR","FMOD","FORCE_CHECKPOINT","FORMAT","FORMATREADABLEDECIMALSIZE","FORMATREADABLESIZE","FORMAT_BYTES","FORMAT_PG_TYPE","FORMAT_TYPE","FROM_BASE64","FROM_BINARY","FROM_HEX","FROM_JSON","FROM_JSON_STRICT","FSUM","FUNCTIONS","GAMMA","GCD","GENERATE_SERIES","GENERATE_SUBSCRIPTS","GEN_RANDOM_UUID","GEOMEAN","GEOMETRIC_MEAN","GETENV","GET_BIT","GET_BLOCK_SIZE","GET_CURRENT_TIME","GET_CURRENT_TIMESTAMP","GLOB","GRADE_UP","GREATEST","GREATEST_COMMON_DIVISOR","GROUP_CONCAT","HAMMING","HASH","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HEX","HISTOGRAM","HOUR","ICU_CALENDAR_NAMES","ICU_SORT_KEY","ILIKE_ESCAPE","IMPORT_DATABASE","INDEX_SCAN","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","INSTR","IN_SEARCH_PATH","ISFINITE","ISINF","ISNAN","ISODOW","ISOYEAR","JACCARD","JARO_SIMILARITY","JARO_WINKLER_SIMILARITY","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_CONTAINS","JSON_DESERIALIZE_SQL","JSON_EXECUTE_SERIALIZED_SQL","JSON_EXTRACT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_EXTRACT_STRING","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_GROUP_STRUCTURE","JSON_KEYS","JSON_MERGE_PATCH","JSON_OBJECT","JSON_QUOTE","JSON_SERIALIZE_PLAN","JSON_SERIALIZE_SQL","JSON_STRUCTURE","JSON_TRANSFORM","JSON_TRANSFORM_STRICT","JSON_TYPE","JSON_VALID","JULIAN","KAHAN_SUM","KURTOSIS","KURTOSIS_POP","LAST","LAST_DAY","LCASE","LCM","LEAST","LEAST_COMMON_MULTIPLE","LEFT","LEFT_GRAPHEME","LEN","LENGTH","LENGTH_GRAPHEME","LEVENSHTEIN","LGAMMA","LIKE_ESCAPE","LIST","LISTAGG","LIST_AGGR","LIST_AGGREGATE","LIST_ANY_VALUE","LIST_APPEND","LIST_APPLY","LIST_APPROX_COUNT_DISTINCT","LIST_AVG","LIST_BIT_AND","LIST_BIT_OR","LIST_BIT_XOR","LIST_BOOL_AND","LIST_BOOL_OR","LIST_CAT","LIST_CONCAT","LIST_CONTAINS","LIST_COSINE_SIMILARITY","LIST_COUNT","LIST_DISTANCE","LIST_DISTINCT","LIST_DOT_PRODUCT","LIST_ELEMENT","LIST_ENTROPY","LIST_EXTRACT","LIST_FILTER","LIST_FIRST","LIST_GRADE_UP","LIST_HAS","LIST_HAS_ALL","LIST_HAS_ANY","LIST_HISTOGRAM","LIST_INDEXOF","LIST_INNER_PRODUCT","LIST_INTERSECT","LIST_KURTOSIS","LIST_KURTOSIS_POP","LIST_LAST","LIST_MAD","LIST_MAX","LIST_MEDIAN","LIST_MIN","LIST_MODE","LIST_PACK","LIST_POSITION","LIST_PREPEND","LIST_PRODUCT","LIST_REDUCE","LIST_RESIZE","LIST_REVERSE","LIST_REVERSE_SORT","LIST_SELECT","LIST_SEM","LIST_SKEWNESS","LIST_SLICE","LIST_SORT","LIST_STDDEV_POP","LIST_STDDEV_SAMP","LIST_STRING_AGG","LIST_SUM","LIST_TRANSFORM","LIST_UNIQUE","LIST_VALUE","LIST_VAR_POP","LIST_VAR_SAMP","LIST_WHERE","LIST_ZIP","LN","LOG","LOG10","LOG2","LOWER","LPAD","LSMODE","LTRIM","MAD","MAKE_DATE","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","MAP","MAP_CONCAT","MAP_ENTRIES","MAP_EXTRACT","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","MAX","MAX_BY","MD5","MD5_NUMBER","MD5_NUMBER_LOWER","MD5_NUMBER_UPPER","MEAN","MEDIAN","METADATA_INFO","MICROSECOND","MILLENNIUM","MILLISECOND","MIN","MINUTE","MIN_BY","MISMATCHES","MOD","MODE","MONTH","MONTHNAME","MULTIPLY","NEXTAFTER","NEXTVAL","NFC_NORMALIZE","NOT_ILIKE_ESCAPE","NOT_LIKE_ESCAPE","NOW","NULLIF","OBJ_DESCRIPTION","OCTET_LENGTH","ORD","PARQUET_FILE_METADATA","PARQUET_KV_METADATA","PARQUET_METADATA","PARQUET_SCAN","PARQUET_SCHEMA","PARSE_DIRNAME","PARSE_DIRPATH","PARSE_FILENAME","PARSE_PATH","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONVERSION_IS_VISIBLE","PG_FUNCTION_IS_VISIBLE","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IS_OTHER_TEMP_SCHEMA","PG_MY_TEMP_SCHEMA","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_POSTMASTER_START_TIME","PG_SIZE_PRETTY","PG_TABLE_IS_VISIBLE","PG_TIMEZONE_NAMES","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PI","PLATFORM","POSITION","POW","POWER","PRAGMA_COLLATIONS","PRAGMA_DATABASE_SIZE","PRAGMA_METADATA_INFO","PRAGMA_PLATFORM","PRAGMA_SHOW","PRAGMA_STORAGE_INFO","PRAGMA_TABLE_INFO","PRAGMA_USER_AGENT","PRAGMA_VERSION","PREFIX","PRINTF","PRODUCT","QUANTILE","QUANTILE_CONT","QUANTILE_DISC","QUARTER","RADIANS","RANDOM","RANGE","READFILE","READ_BLOB","READ_CSV","READ_CSV_AUTO","READ_JSON","READ_JSON_AUTO","READ_JSON_OBJECTS","READ_JSON_OBJECTS_AUTO","READ_NDJSON","READ_NDJSON_AUTO","READ_NDJSON_OBJECTS","READ_PARQUET","READ_TEXT","REDUCE","REGEXP_ESCAPE","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_FULL_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REPEAT","REPEAT_ROW","REPLACE","RESERVOIR_QUANTILE","REVERSE","RIGHT","RIGHT_GRAPHEME","ROUND","ROUNDBANKERS","ROUND_EVEN","ROW","ROW_TO_JSON","RPAD","RTRIM","SECOND","SEM","SEQ_SCAN","SESSION_USER","SETSEED","SET_BIT","SHA256","SHA3","SHELL_ADD_SCHEMA","SHELL_ESCAPE_CRNL","SHELL_IDQUOTE","SHELL_MODULE_SCHEMA","SHELL_PUTSNL","SHOBJ_DESCRIPTION","SHOW","SHOW_DATABASES","SHOW_TABLES","SHOW_TABLES_EXPANDED","SIGN","SIGNBIT","SIN","SKEWNESS","SNIFF_CSV","SPLIT","SPLIT_PART","SQL_AUTO_COMPLETE","SQRT","STARTS_WITH","STATS","STDDEV","STDDEV_POP","STDDEV_SAMP","STORAGE_INFO","STRFTIME","STRING_AGG","STRING_SPLIT","STRING_SPLIT_REGEX","STRING_TO_ARRAY","STRIP_ACCENTS","STRLEN","STRPOS","STRPTIME","STRUCT_EXTRACT","STRUCT_INSERT","STRUCT_PACK","STR_SPLIT","STR_SPLIT_REGEX","SUBSTR","SUBSTRING","SUBSTRING_GRAPHEME","SUBTRACT","SUFFIX","SUM","SUMKAHAN","SUMMARY","SUM_NO_OVERFLOW","TABLE_INFO","TAN","TEST_ALL_TYPES","TEST_VECTOR_TYPES","TIMEZONE","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIME_BUCKET","TODAY","TO_BASE","TO_BASE64","TO_BINARY","TO_CENTURIES","TO_DAYS","TO_DECADES","TO_HEX","TO_HOURS","TO_JSON","TO_MICROSECONDS","TO_MILLENNIA","TO_MILLISECONDS","TO_MINUTES","TO_MONTHS","TO_SECONDS","TO_TIMESTAMP","TO_WEEKS","TO_YEARS","TRANSACTION_TIMESTAMP","TRANSLATE","TRIM","TRUNC","TRY_STRPTIME","TXID_CURRENT","TYPEOF","UCASE","UNBIN","UNHEX","UNICODE","UNION_EXTRACT","UNION_TAG","UNION_VALUE","UNNEST","UNPIVOT_LIST","UPPER","USER","USER_AGENT","UUID","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_TYPE","VERIFY_EXTERNAL","VERIFY_FETCH_ROW","VERIFY_PARALLELISM","VERIFY_SERIALIZER","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","WHICH_SECRET","WRITEFILE","XOR","YEAR","YEARWEEK","CAST","COALESCE","NULL","RANK","ROW_NUMBER"],nestedBlockComments:!0,extraParens:["[]","{}"],stringTypes:["$$","''-qq",{quote:"''-qq-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{rest:"$"},paramTypes:{positional:!0,numbered:["$"],quoted:["$"]},operators:["//","%","**","^","!","&","|","~","<<",">>","::","==","->",":",":=","=>","~~","!~~","~~*","!~~*","~~~","~","!~","~*","!~*","^@","||",">>=","<<="]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...c,...m],tabularOnelineClauses:m}},L=e=>e[e.length-1],d=e=>e.sort(((e,s)=>s.length-e.length||e.localeCompare(s))),C=e=>e.replace(/\s+/gu," "),f=e=>/\n/.test(e),D=e=>e.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),P=/\s+/uy,b=e=>new RegExp(`(?:${e})`,"uy"),x=e=>e.split("").map((e=>/ /gu.test(e)?"\\s+":`[${e.toUpperCase()}${e.toLowerCase()}]`)).join(""),M=(e,s=[])=>{const t="open"===e?0:1,r=["()",...s].map((e=>e[t]));return b(r.map(D).join("|"))},$=e=>b(`${d(e).map(D).join("|")}`),g=(e,s={})=>{if(0===e.length)return/^\b$/u;const t=(({rest:e,dashes:s})=>e||s?`(?![${e||""}${s?"-":""}])`:"")(s),r=d(e).map(D).join("|").replace(/ /gu,"\\s+");return new RegExp(`(?:${r})${t}\\b`,"iuy")},U=(e,s)=>{if(!e.length)return;const t=e.map(D).join("|");return b(`(?:${t})(?:${s})`)},w={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":(()=>{const e={"<":">","[":"]","(":")","{":"}"},s=Object.entries(e).map((([e,s])=>"{left}(?:(?!{right}').)*?{right}".replace(/{left}/g,D(e)).replace(/{right}/g,D(s)))),t=D(Object.keys(e).join(""));return`[Qq]'(?:${String.raw`(?<tag>[^\s${t}])(?:(?!\k<tag>').)*?\k<tag>`}|${s.join("|")})'`})()},B=e=>"string"==typeof e?w[e]:"regex"in e?e.regex:(({prefixes:e,requirePrefix:s})=>`(?:${e.map(x).join("|")}${s?"":"|"})`)(e)+w[e.quote],G=e=>e.map(B).join("|"),Y=e=>b(G(e)),F=(e={})=>b(V(e)),V=({first:e,rest:s,dashes:t,allowFirstCharNumber:r}={})=>{const n="\\p{Alphabetic}\\p{Mark}_",E="\\p{Decimal_Number}",i=D(null!=e?e:""),a=D(null!=s?s:""),o=r?`[${n}${E}${i}][${n}${E}${a}]*`:`[${n}${i}][${n}${E}${a}]*`;return t?(e=>e+"(?:-"+e+")*")(o):o};function W(e,s){const t=e.slice(0,s).split(/\n/);return{line:t.length,col:t[t.length-1].length+1}}class H{constructor(e,s){this.rules=e,this.dialectName=s,this.input="",this.index=0}tokenize(e){this.input=e,this.index=0;const s=[];let t;for(;this.index<this.input.length;){const e=this.getWhitespace();if(this.index<this.input.length){if(t=this.getNextToken(),!t)throw this.createParseError();s.push(Object.assign(Object.assign({},t),{precedingWhitespace:e}))}}return s}createParseError(){const e=this.input.slice(this.index,this.index+10),{line:s,col:t}=W(this.input,this.index);return new Error(`Parse error: Unexpected "${e}" at line ${s} column ${t}.\n${this.dialectInfo()}`)}dialectInfo(){return"sql"===this.dialectName?'This likely happens because you\'re using the default "sql" dialect.\nIf possible, please select a more specific dialect (like sqlite, postgresql, etc).':`SQL dialect used: "${this.dialectName}".`}getWhitespace(){P.lastIndex=this.index;const e=P.exec(this.input);if(e)return this.index+=e[0].length,e[0]}getNextToken(){for(const e of this.rules){const s=this.match(e);if(s)return s}}match(e){e.regex.lastIndex=this.index;const s=e.regex.exec(this.input);if(s){const t=s[0],r={type:e.type,raw:t,text:e.text?e.text(t):t,start:this.index};return e.key&&(r.key=e.key(t)),this.index+=t.length,r}}}const v=/\/\*/uy,k=/[\s\S]/uy,K=/\*\//uy;class X{constructor(){this.lastIndex=0}exec(e){let s,t="",r=0;if(!(s=this.matchSection(v,e)))return null;for(t+=s,r++;r>0;)if(s=this.matchSection(v,e))t+=s,r++;else if(s=this.matchSection(K,e))t+=s,r--;else{if(!(s=this.matchSection(k,e)))return null;t+=s}return[t]}matchSection(e,s){e.lastIndex=this.lastIndex;const t=e.exec(s);return t&&(this.lastIndex+=t[0].length),t?t[0]:null}}class J{constructor(e,s){this.cfg=e,this.dialectName=s,this.rulesBeforeParams=this.buildRulesBeforeParams(e),this.rulesAfterParams=this.buildRulesAfterParams(e)}tokenize(e,s){const t=[...this.rulesBeforeParams,...this.buildParamRules(this.cfg,s),...this.rulesAfterParams],r=new H(t,this.dialectName).tokenize(e);return this.cfg.postProcess?this.cfg.postProcess(r):r}buildRulesBeforeParams(e){var s,t,r;return this.validRules([{type:R.BLOCK_COMMENT,regex:/(\/\* *sql-formatter-disable *\*\/[\s\S]*?(?:\/\* *sql-formatter-enable *\*\/|$))/uy},{type:R.BLOCK_COMMENT,regex:e.nestedBlockComments?new X:/(\/\*[^]*?\*\/)/uy},{type:R.LINE_COMMENT,regex:(r=null!==(s=e.lineCommentTypes)&&void 0!==s?s:["--"],new RegExp(`(?:${r.map(D).join("|")}).*?(?=\r\n|\r|\n|$)`,"uy"))},{type:R.QUOTED_IDENTIFIER,regex:Y(e.identTypes)},{type:R.NUMBER,regex:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?(?:[0-9]*\.[0-9]+|[0-9]+(?:\.[0-9]*)?)(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?![\w\p{Alphabetic}])/uy},{type:R.RESERVED_PHRASE,regex:g(null!==(t=e.reservedPhrases)&&void 0!==t?t:[],e.identChars),text:q},{type:R.CASE,regex:/CASE\b/iuy,text:q},{type:R.END,regex:/END\b/iuy,text:q},{type:R.BETWEEN,regex:/BETWEEN\b/iuy,text:q},{type:R.LIMIT,regex:e.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:q},{type:R.RESERVED_CLAUSE,regex:g(e.reservedClauses,e.identChars),text:q},{type:R.RESERVED_SELECT,regex:g(e.reservedSelect,e.identChars),text:q},{type:R.RESERVED_SET_OPERATION,regex:g(e.reservedSetOperations,e.identChars),text:q},{type:R.WHEN,regex:/WHEN\b/iuy,text:q},{type:R.ELSE,regex:/ELSE\b/iuy,text:q},{type:R.THEN,regex:/THEN\b/iuy,text:q},{type:R.RESERVED_JOIN,regex:g(e.reservedJoins,e.identChars),text:q},{type:R.AND,regex:/AND\b/iuy,text:q},{type:R.OR,regex:/OR\b/iuy,text:q},{type:R.XOR,regex:e.supportsXor?/XOR\b/iuy:void 0,text:q},...e.operatorKeyword?[{type:R.OPERATOR,regex:/OPERATOR *\([^)]+\)/iuy}]:[],{type:R.RESERVED_FUNCTION_NAME,regex:g(e.reservedFunctionNames,e.identChars),text:q},{type:R.RESERVED_DATA_TYPE,regex:g(e.reservedDataTypes,e.identChars),text:q},{type:R.RESERVED_KEYWORD,regex:g(e.reservedKeywords,e.identChars),text:q}])}buildRulesAfterParams(e){var s,t,r;return this.validRules([{type:R.VARIABLE,regex:e.variableTypes?(r=e.variableTypes,b(r.map((e=>"regex"in e?e.regex:B(e))).join("|"))):void 0},{type:R.STRING,regex:Y(e.stringTypes)},{type:R.IDENTIFIER,regex:F(e.identChars)},{type:R.DELIMITER,regex:/[;]/uy},{type:R.COMMA,regex:/[,]/y},{type:R.OPEN_PAREN,regex:M("open",e.extraParens)},{type:R.CLOSE_PAREN,regex:M("close",e.extraParens)},{type:R.OPERATOR,regex:$(["+","-","/",">","<","=","<>","<=",">=","!=",...null!==(s=e.operators)&&void 0!==s?s:[]])},{type:R.ASTERISK,regex:/[*]/uy},{type:R.PROPERTY_ACCESS_OPERATOR,regex:$([".",...null!==(t=e.propertyAccessOperators)&&void 0!==t?t:[]])}])}buildParamRules(e,s){var t,r,n,E,i;const a={named:(null==s?void 0:s.named)||(null===(t=e.paramTypes)||void 0===t?void 0:t.named)||[],quoted:(null==s?void 0:s.quoted)||(null===(r=e.paramTypes)||void 0===r?void 0:r.quoted)||[],numbered:(null==s?void 0:s.numbered)||(null===(n=e.paramTypes)||void 0===n?void 0:n.numbered)||[],positional:"boolean"==typeof(null==s?void 0:s.positional)?s.positional:null===(E=e.paramTypes)||void 0===E?void 0:E.positional,custom:(null==s?void 0:s.custom)||(null===(i=e.paramTypes)||void 0===i?void 0:i.custom)||[]};return this.validRules([{type:R.NAMED_PARAMETER,regex:U(a.named,V(e.paramChars||e.identChars)),key:e=>e.slice(1)},{type:R.QUOTED_PARAMETER,regex:U(a.quoted,G(e.identTypes)),key:e=>(({tokenKey:e,quoteChar:s})=>e.replace(new RegExp(D("\\"+s),"gu"),s))({tokenKey:e.slice(2,-1),quoteChar:e.slice(-1)})},{type:R.NUMBERED_PARAMETER,regex:U(a.numbered,"[0-9]+"),key:e=>e.slice(1)},{type:R.POSITIONAL_PARAMETER,regex:a.positional?/[?]/y:void 0},...a.custom.map((e=>{var s;return{type:R.CUSTOM_PARAMETER,regex:b(e.regex),key:null!==(s=e.key)&&void 0!==s?s:e=>e}}))])}validRules(e){return e.filter((e=>Boolean(e.regex)))}}const q=e=>C(e.toUpperCase()),j=new Map,Q=e=>({tokenizer:new J(e.tokenizerOptions,e.name),formatOptions:Z(e.formatOptions)}),Z=e=>{var s;return{alwaysDenseOperators:e.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(e.onelineClauses.map((e=>[e,!0]))),tabularOnelineClauses:Object.fromEntries((null!==(s=e.tabularOnelineClauses)&&void 0!==s?s:e.onelineClauses).map((e=>[e,!0])))}};function z(e){return"tabularLeft"===e.indentStyle||"tabularRight"===e.indentStyle}class ee{constructor(e){this.params=e,this.index=0}get({key:e,text:s}){return this.params?e?this.params[e]:this.params[this.index++]:s}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(e){this.index=e}}var se,te,re,ne,Ee={exports:{}};const ie=e((se||(se=1,re=Ee.exports,ne=function(){function e(s,t,r){return this.id=++e.highestId,this.name=s,this.symbols=t,this.postprocess=r,this}function s(e,s,t,r){this.rule=e,this.dot=s,this.reference=t,this.data=[],this.wantedBy=r,this.isComplete=this.dot===e.symbols.length}function t(e,s){this.grammar=e,this.index=s,this.states=[],this.wants={},this.scannable=[],this.completed={}}function r(e,s){this.rules=e,this.start=s||this.rules[0].name;var t=this.byName={};this.rules.forEach((function(e){t.hasOwnProperty(e.name)||(t[e.name]=[]),t[e.name].push(e)}))}function n(){this.reset("")}function E(e,s,E){if(e instanceof r){var i=e;E=s}else i=r.fromCompiled(e,s);for(var a in this.grammar=i,this.options={keepHistory:!1,lexer:i.lexer||new n},E||{})this.options[a]=E[a];this.lexer=this.options.lexer,this.lexerState=void 0;var o=new t(i,0);this.table=[o],o.wants[i.start]=[],o.predict(i.start),o.process(),this.current=0}function i(e){var s=typeof e;if("string"===s)return e;if("object"===s){if(e.literal)return JSON.stringify(e.literal);if(e instanceof RegExp)return e.toString();if(e.type)return"%"+e.type;if(e.test)return"<"+String(e.test)+">";throw new Error("Unknown symbol type: "+e)}}return e.highestId=0,e.prototype.toString=function(e){var s=void 0===e?this.symbols.map(i).join(" "):this.symbols.slice(0,e).map(i).join(" ")+" ● "+this.symbols.slice(e).map(i).join(" ");return this.name+" → "+s},s.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},s.prototype.nextState=function(e){var t=new s(this.rule,this.dot+1,this.reference,this.wantedBy);return t.left=this,t.right=e,t.isComplete&&(t.data=t.build(),t.right=void 0),t},s.prototype.build=function(){var e=[],s=this;do{e.push(s.right.data),s=s.left}while(s.left);return e.reverse(),e},s.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,E.fail))},t.prototype.process=function(e){for(var s=this.states,t=this.wants,r=this.completed,n=0;n<s.length;n++){var i=s[n];if(i.isComplete){if(i.finish(),i.data!==E.fail){for(var a=i.wantedBy,o=a.length;o--;){var _=a[o];this.complete(_,i)}if(i.reference===this.index){var T=i.rule.name;(this.completed[T]=this.completed[T]||[]).push(i)}}}else{if("string"!=typeof(T=i.rule.symbols[i.dot])){this.scannable.push(i);continue}if(t[T]){if(t[T].push(i),r.hasOwnProperty(T)){var l=r[T];for(o=0;o<l.length;o++){var R=l[o];this.complete(i,R)}}}else t[T]=[i],this.predict(T)}}},t.prototype.predict=function(e){for(var t=this.grammar.byName[e]||[],r=0;r<t.length;r++){var n=t[r],E=this.wants[e],i=new s(n,0,this.index,E);this.states.push(i)}},t.prototype.complete=function(e,s){var t=e.nextState(s);this.states.push(t)},r.fromCompiled=function(s,t){var n=s.Lexer;s.ParserStart&&(t=s.ParserStart,s=s.ParserRules);var E=new r(s=s.map((function(s){return new e(s.name,s.symbols,s.postprocess)})),t);return E.lexer=n,E},n.prototype.reset=function(e,s){this.buffer=e,this.index=0,this.line=s?s.line:1,this.lastLineBreak=s?-s.col:0},n.prototype.next=function(){if(this.index<this.buffer.length){var e=this.buffer[this.index++];return"\n"===e&&(this.line+=1,this.lastLineBreak=this.index),{value:e}}},n.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},n.prototype.formatError=function(e,s){var t=this.buffer;if("string"==typeof t){var r=t.split("\n").slice(Math.max(0,this.line-5),this.line),n=t.indexOf("\n",this.index);-1===n&&(n=t.length);var E=this.index-this.lastLineBreak,i=String(this.line).length;return s+=" at line "+this.line+" col "+E+":\n\n",s+=r.map((function(e,s){return a(this.line-r.length+s+1,i)+" "+e}),this).join("\n"),s+="\n"+a("",i+E)+"^\n"}return s+" at index "+(this.index-1);function a(e,s){var t=String(e);return Array(s-t.length+1).join(" ")+t}},E.fail={},E.prototype.feed=function(e){var s,r=this.lexer;for(r.reset(e,this.lexerState);;){try{if(!(s=r.next()))break}catch(I){var E=new t(this.grammar,this.current+1);throw this.table.push(E),(o=new Error(this.reportLexerError(I))).offset=this.current,o.token=I.token,o}var i=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var a=this.current+1;E=new t(this.grammar,a),this.table.push(E);for(var o,_=void 0!==s.text?s.text:s.value,T=r.constructor===n?s.value:s,l=i.scannable,R=l.length;R--;){var A=l[R],p=A.rule.symbols[A.dot];if(p.test?p.test(T):p.type?p.type===s.type:p.literal===_){var S=A.nextState({data:T,token:s,isToken:!0,reference:a-1});E.states.push(S)}}if(E.process(),0===E.states.length)throw(o=new Error(this.reportError(s))).offset=this.current,o.token=s,o;this.options.keepHistory&&(i.lexerState=r.save()),this.current++}return i&&(this.lexerState=r.save()),this.results=this.finish(),this},E.prototype.reportLexerError=function(e){var s,t,r=e.token;return r?(s="input "+JSON.stringify(r.text[0])+" (lexer error)",t=this.lexer.formatError(r,"Syntax error")):(s="input (lexer error)",t=e.message),this.reportErrorCommon(t,s)},E.prototype.reportError=function(e){var s=(e.type?e.type+" token: ":"")+JSON.stringify(void 0!==e.value?e.value:e),t=this.lexer.formatError(e,"Syntax error");return this.reportErrorCommon(t,s)},E.prototype.reportErrorCommon=function(e,s){var t=[];t.push(e);var r=this.table.length-2,n=this.table[r],E=n.states.filter((function(e){var s=e.rule.symbols[e.dot];return s&&"string"!=typeof s}));return 0===E.length?(t.push("Unexpected "+s+". I did not expect any more input. Here is the state of my parse table:\n"),this.displayStateStack(n.states,t)):(t.push("Unexpected "+s+". Instead, I was expecting to see one of the following:\n"),E.map((function(e){return this.buildFirstStateStack(e,[])||[e]}),this).forEach((function(e){var s=e[0],r=s.rule.symbols[s.dot],n=this.getSymbolDisplay(r);t.push("A "+n+" based on:"),this.displayStateStack(e,t)}),this)),t.push(""),t.join("\n")},E.prototype.displayStateStack=function(e,s){for(var t,r=0,n=0;n<e.length;n++){var E=e[n],i=E.rule.toString(E.dot);i===t?r++:(r>0&&s.push("    ^ "+r+" more lines identical to this"),r=0,s.push("    "+i)),t=i}},E.prototype.getSymbolDisplay=function(e){return function(e){var s=typeof e;if("string"===s)return e;if("object"===s){if(e.literal)return JSON.stringify(e.literal);if(e instanceof RegExp)return"character matching "+e;if(e.type)return e.type+" token";if(e.test)return"token matching "+String(e.test);throw new Error("Unknown symbol type: "+e)}}(e)},E.prototype.buildFirstStateStack=function(e,s){if(-1!==s.indexOf(e))return null;if(0===e.wantedBy.length)return[e];var t=e.wantedBy[0],r=[e].concat(s),n=this.buildFirstStateStack(t,r);return null===n?null:[e].concat(n)},E.prototype.save=function(){var e=this.table[this.current];return e.lexerState=this.lexerState,e},E.prototype.restore=function(e){var s=e.index;this.current=s,this.table[s]=e,this.table.splice(s+1),this.lexerState=e.lexerState,this.results=this.finish()},E.prototype.rewind=function(e){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[e])},E.prototype.finish=function(){var e=[],s=this.grammar.start;return this.table[this.table.length-1].states.forEach((function(t){t.rule.name===s&&t.dot===t.rule.symbols.length&&0===t.reference&&t.data!==E.fail&&e.push(t)})),e.map((function(e){return e.data}))},{Parser:E,Grammar:r,Rule:e}},(te=Ee).exports?te.exports=ne():re.nearley=ne()),Ee.exports));const ae=(e,s,t)=>{if((r=e.type)===R.RESERVED_DATA_TYPE||r===R.RESERVED_KEYWORD||r===R.RESERVED_FUNCTION_NAME||r===R.RESERVED_PHRASE||r===R.RESERVED_CLAUSE||r===R.RESERVED_SELECT||r===R.RESERVED_SET_OPERATION||r===R.RESERVED_JOIN||r===R.ARRAY_KEYWORD||r===R.CASE||r===R.END||r===R.WHEN||r===R.ELSE||r===R.THEN||r===R.LIMIT||r===R.BETWEEN||r===R.AND||r===R.OR||r===R.XOR){const r=Re(t,s);if(r&&r.type===R.PROPERTY_ACCESS_OPERATOR)return Object.assign(Object.assign({},e),{type:R.IDENTIFIER,text:e.raw});const n=Ae(t,s);if(n&&n.type===R.PROPERTY_ACCESS_OPERATOR)return Object.assign(Object.assign({},e),{type:R.IDENTIFIER,text:e.raw})}var r;return e},oe=(e,s,t)=>{if(e.type===R.RESERVED_FUNCTION_NAME){const r=Ae(t,s);if(!r||!pe(r))return Object.assign(Object.assign({},e),{type:R.IDENTIFIER,text:e.raw})}return e},_e=(e,s,t)=>{if(e.type===R.RESERVED_DATA_TYPE){const r=Ae(t,s);if(r&&pe(r))return Object.assign(Object.assign({},e),{type:R.RESERVED_PARAMETERIZED_DATA_TYPE})}return e},Te=(e,s,t)=>{if(e.type===R.IDENTIFIER){const r=Ae(t,s);if(r&&Se(r))return Object.assign(Object.assign({},e),{type:R.ARRAY_IDENTIFIER})}return e},le=(e,s,t)=>{if(e.type===R.RESERVED_DATA_TYPE){const r=Ae(t,s);if(r&&Se(r))return Object.assign(Object.assign({},e),{type:R.ARRAY_KEYWORD})}return e},Re=(e,s)=>Ae(e,s,-1),Ae=(e,s,t=1)=>{let r=1;for(;e[s+r*t]&&Ie(e[s+r*t]);)r++;return e[s+r*t]},pe=e=>e.type===R.OPEN_PAREN&&"("===e.text,Se=e=>e.type===R.OPEN_PAREN&&"["===e.text,Ie=e=>e.type===R.BLOCK_COMMENT||e.type===R.LINE_COMMENT;class Ne{constructor(e){this.tokenize=e,this.index=0,this.tokens=[],this.input=""}reset(e,s){this.input=e,this.index=0,this.tokens=this.tokenize(e)}next(){return this.tokens[this.index++]}save(){}formatError(e){const{line:s,col:t}=W(this.input,e.start);return`Parse error at token: ${e.text} at line ${s} column ${t}`}has(e){return e in R}}var ce,me;function he(e){return e[0]}(me=ce=ce||(ce={})).statement="statement",me.clause="clause",me.set_operation="set_operation",me.function_call="function_call",me.parameterized_data_type="parameterized_data_type",me.array_subscript="array_subscript",me.property_access="property_access",me.parenthesis="parenthesis",me.between_predicate="between_predicate",me.case_expression="case_expression",me.case_when="case_when",me.case_else="case_else",me.limit_clause="limit_clause",me.all_columns_asterisk="all_columns_asterisk",me.literal="literal",me.identifier="identifier",me.keyword="keyword",me.data_type="data_type",me.parameter="parameter",me.operator="operator",me.comma="comma",me.line_comment="line_comment",me.block_comment="block_comment",me.disable_comment="disable_comment";const ue=new Ne((e=>[])),Oe=([[e]])=>e,ye=e=>({type:ce.keyword,tokenType:e.type,text:e.text,raw:e.raw}),Le=e=>({type:ce.data_type,text:e.text,raw:e.raw}),de=(e,{leading:s,trailing:t})=>((null==s?void 0:s.length)&&(e=Object.assign(Object.assign({},e),{leadingComments:s})),(null==t?void 0:t.length)&&(e=Object.assign(Object.assign({},e),{trailingComments:t})),e),Ce=(e,{leading:s,trailing:t})=>{if(null==s?void 0:s.length){const[t,...r]=e;e=[de(t,{leading:s}),...r]}if(null==t?void 0:t.length){const s=e.slice(0,-1),r=e[e.length-1];e=[...s,de(r,{trailing:t})]}return e},fe={Lexer:ue,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:e=>e[0].concat([e[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([e])=>{const s=e[e.length-1];return s&&!s.hasSemicolon?s.children.length>0?e:e.slice(0,-1):e}},{name:"statement$subexpression$1",symbols:[ue.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[ue.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([e,[s]])=>({type:ce.statement,children:e,hasSemicolon:s.type===R.DELIMITER})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([e,s])=>[...e,...s]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:Oe},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[ue.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:he},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[ue.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([e,s,t,r])=>{if(r){const[n,E]=r;return{type:ce.limit_clause,limitKw:de(ye(e),{trailing:s}),offset:t,count:E}}return{type:ce.limit_clause,limitKw:de(ye(e),{trailing:s}),count:t}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[ue.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([e,[s,t]])=>({type:ce.clause,nameKw:ye(e),children:[s,...t]})},{name:"select_clause",symbols:[ue.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([e])=>({type:ce.clause,nameKw:ye(e),children:[]})},{name:"all_columns_asterisk",symbols:[ue.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:ce.all_columns_asterisk})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"other_clause",symbols:[ue.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([e,s])=>({type:ce.clause,nameKw:ye(e),children:s})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"set_operation",symbols:[ue.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([e,s])=>({type:ce.set_operation,nameKw:ye(e),children:s})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:he},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([e,s])=>[e,...s]},{name:"andless_expression_chain$ebnf$1",symbols:[]},{name:"andless_expression_chain$ebnf$1",symbols:["andless_expression_chain$ebnf$1","_andless_expression_with_comments"],postprocess:e=>e[0].concat([e[1]])},{name:"andless_expression_chain",symbols:["andless_expression","andless_expression_chain$ebnf$1"],postprocess:([e,s])=>[e,...s]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([e,s])=>de(e,{trailing:s})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([e,s])=>de(s,{leading:e})},{name:"_andless_expression_with_comments",symbols:["_","andless_expression"],postprocess:([e,s])=>de(s,{leading:e})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:Oe},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["logic_operator"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:Oe},{name:"expression$subexpression$1",symbols:["andless_expression"]},{name:"expression$subexpression$1",symbols:["logic_operator"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:Oe},{name:"andless_expression$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"andless_expression$subexpression$1",symbols:["asterisk"]},{name:"andless_expression",symbols:["andless_expression$subexpression$1"],postprocess:Oe},{name:"asteriskless_andless_expression$subexpression$1",symbols:["atomic_expression"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_andless_expression",symbols:["asteriskless_andless_expression$subexpression$1"],postprocess:Oe},{name:"atomic_expression$subexpression$1",symbols:["array_subscript"]},{name:"atomic_expression$subexpression$1",symbols:["function_call"]},{name:"atomic_expression$subexpression$1",symbols:["property_access"]},{name:"atomic_expression$subexpression$1",symbols:["parenthesis"]},{name:"atomic_expression$subexpression$1",symbols:["curly_braces"]},{name:"atomic_expression$subexpression$1",symbols:["square_brackets"]},{name:"atomic_expression$subexpression$1",symbols:["operator"]},{name:"atomic_expression$subexpression$1",symbols:["identifier"]},{name:"atomic_expression$subexpression$1",symbols:["parameter"]},{name:"atomic_expression$subexpression$1",symbols:["literal"]},{name:"atomic_expression$subexpression$1",symbols:["data_type"]},{name:"atomic_expression$subexpression$1",symbols:["keyword"]},{name:"atomic_expression",symbols:["atomic_expression$subexpression$1"],postprocess:Oe},{name:"array_subscript",symbols:[ue.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([e,s,t])=>({type:ce.array_subscript,array:de({type:ce.identifier,quoted:!1,text:e.text},{trailing:s}),parenthesis:t})},{name:"array_subscript",symbols:[ue.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([e,s,t])=>({type:ce.array_subscript,array:de(ye(e),{trailing:s}),parenthesis:t})},{name:"function_call",symbols:[ue.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([e,s,t])=>({type:ce.function_call,nameKw:de(ye(e),{trailing:s}),parenthesis:t})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([e,s,t])=>({type:ce.parenthesis,children:s,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([e,s,t])=>({type:ce.parenthesis,children:s,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([e,s,t])=>({type:ce.parenthesis,children:s,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access$subexpression$1",symbols:["parameter"]},{name:"property_access",symbols:["atomic_expression","_",ue.has("PROPERTY_ACCESS_OPERATOR")?{type:"PROPERTY_ACCESS_OPERATOR"}:PROPERTY_ACCESS_OPERATOR,"_","property_access$subexpression$1"],postprocess:([e,s,t,r,[n]])=>({type:ce.property_access,object:de(e,{trailing:s}),operator:t.text,property:de(n,{leading:r})})},{name:"between_predicate",symbols:[ue.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","andless_expression_chain","_",ue.has("AND")?{type:"AND"}:AND,"_","andless_expression"],postprocess:([e,s,t,r,n,E,i])=>({type:ce.between_predicate,betweenKw:ye(e),expr1:Ce(t,{leading:s,trailing:r}),andKw:ye(n),expr2:[de(i,{leading:E})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:he},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:e=>e[0].concat([e[1]])},{name:"case_expression",symbols:[ue.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",ue.has("END")?{type:"END"}:END],postprocess:([e,s,t,r,n])=>({type:ce.case_expression,caseKw:de(ye(e),{trailing:s}),endKw:ye(n),expr:t||[],clauses:r})},{name:"case_clause",symbols:[ue.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",ue.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([e,s,t,r,n,E])=>({type:ce.case_when,whenKw:de(ye(e),{trailing:s}),thenKw:de(ye(r),{trailing:n}),condition:t,result:E})},{name:"case_clause",symbols:[ue.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([e,s,t])=>({type:ce.case_else,elseKw:de(ye(e),{trailing:s}),result:t})},{name:"comma$subexpression$1",symbols:[ue.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[e]])=>({type:ce.comma})},{name:"asterisk$subexpression$1",symbols:[ue.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[e]])=>({type:ce.operator,text:e.text})},{name:"operator$subexpression$1",symbols:[ue.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[e]])=>({type:ce.operator,text:e.text})},{name:"identifier$subexpression$1",symbols:[ue.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[ue.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[ue.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[e]])=>({type:ce.identifier,quoted:"IDENTIFIER"!==e.type,text:e.text})},{name:"parameter$subexpression$1",symbols:[ue.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[ue.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[ue.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[ue.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter$subexpression$1",symbols:[ue.has("CUSTOM_PARAMETER")?{type:"CUSTOM_PARAMETER"}:CUSTOM_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[e]])=>({type:ce.parameter,key:e.key,text:e.text})},{name:"literal$subexpression$1",symbols:[ue.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[ue.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[e]])=>({type:ce.literal,text:e.text})},{name:"keyword$subexpression$1",symbols:[ue.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[ue.has("RESERVED_PHRASE")?{type:"RESERVED_PHRASE"}:RESERVED_PHRASE]},{name:"keyword$subexpression$1",symbols:[ue.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[e]])=>ye(e)},{name:"data_type$subexpression$1",symbols:[ue.has("RESERVED_DATA_TYPE")?{type:"RESERVED_DATA_TYPE"}:RESERVED_DATA_TYPE]},{name:"data_type",symbols:["data_type$subexpression$1"],postprocess:([[e]])=>Le(e)},{name:"data_type",symbols:[ue.has("RESERVED_PARAMETERIZED_DATA_TYPE")?{type:"RESERVED_PARAMETERIZED_DATA_TYPE"}:RESERVED_PARAMETERIZED_DATA_TYPE,"_","parenthesis"],postprocess:([e,s,t])=>({type:ce.parameterized_data_type,dataType:de(Le(e),{trailing:s}),parenthesis:t})},{name:"logic_operator$subexpression$1",symbols:[ue.has("AND")?{type:"AND"}:AND]},{name:"logic_operator$subexpression$1",symbols:[ue.has("OR")?{type:"OR"}:OR]},{name:"logic_operator$subexpression$1",symbols:[ue.has("XOR")?{type:"XOR"}:XOR]},{name:"logic_operator",symbols:["logic_operator$subexpression$1"],postprocess:([[e]])=>ye(e)},{name:"other_keyword$subexpression$1",symbols:[ue.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[ue.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[ue.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[ue.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[e]])=>ye(e)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([e])=>e},{name:"comment",symbols:[ue.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([e])=>({type:ce.line_comment,text:e.text,precedingWhitespace:e.precedingWhitespace})},{name:"comment",symbols:[ue.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([e])=>({type:ce.block_comment,text:e.text,precedingWhitespace:e.precedingWhitespace})},{name:"comment",symbols:[ue.has("DISABLE_COMMENT")?{type:"DISABLE_COMMENT"}:DISABLE_COMMENT],postprocess:([e])=>({type:ce.disable_comment,text:e.text,precedingWhitespace:e.precedingWhitespace})}],ParserStart:"main"},{Parser:De,Grammar:Pe}=ie;var be,xe;(xe=be=be||(be={}))[xe.SPACE=0]="SPACE",xe[xe.NO_SPACE=1]="NO_SPACE",xe[xe.NO_NEWLINE=2]="NO_NEWLINE",xe[xe.NEWLINE=3]="NEWLINE",xe[xe.MANDATORY_NEWLINE=4]="MANDATORY_NEWLINE",xe[xe.INDENT=5]="INDENT",xe[xe.SINGLE_INDENT=6]="SINGLE_INDENT";class Me{constructor(e){this.indentation=e,this.items=[]}add(...e){for(const s of e)switch(s){case be.SPACE:this.items.push(be.SPACE);break;case be.NO_SPACE:this.trimHorizontalWhitespace();break;case be.NO_NEWLINE:this.trimWhitespace();break;case be.NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(be.NEWLINE);break;case be.MANDATORY_NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(be.MANDATORY_NEWLINE);break;case be.INDENT:this.addIndentation();break;case be.SINGLE_INDENT:this.items.push(be.SINGLE_INDENT);break;default:this.items.push(s)}}trimHorizontalWhitespace(){for(;$e(L(this.items));)this.items.pop()}trimWhitespace(){for(;ge(L(this.items));)this.items.pop()}addNewline(e){if(this.items.length>0)switch(L(this.items)){case be.NEWLINE:this.items.pop(),this.items.push(e);break;case be.MANDATORY_NEWLINE:break;default:this.items.push(e)}}addIndentation(){for(let e=0;e<this.indentation.getLevel();e++)this.items.push(be.SINGLE_INDENT)}toString(){return this.items.map((e=>this.itemToString(e))).join("")}getLayoutItems(){return this.items}itemToString(e){switch(e){case be.SPACE:return" ";case be.NEWLINE:case be.MANDATORY_NEWLINE:return"\n";case be.SINGLE_INDENT:return this.indentation.getSingleIndent();default:return e}}}const $e=e=>e===be.SPACE||e===be.SINGLE_INDENT,ge=e=>e===be.SPACE||e===be.SINGLE_INDENT||e===be.NEWLINE;function Ue(e,s){if("standard"===s)return e;let t=[];return e.length>=10&&e.includes(" ")&&([e,...t]=e.split(" ")),(e="tabularLeft"===s?e.padEnd(9," "):e.padStart(9," "))+["",...t].join(" ")}function we(e){return(e=>e===R.AND||e===R.OR||e===R.XOR)(e)||e===R.RESERVED_CLAUSE||e===R.RESERVED_SELECT||e===R.RESERVED_SET_OPERATION||e===R.RESERVED_JOIN||e===R.LIMIT}const Be="top-level";class Ge{constructor(e){this.indent=e,this.indentTypes=[]}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(Be)}increaseBlockLevel(){this.indentTypes.push("block-level")}decreaseTopLevel(){this.indentTypes.length>0&&L(this.indentTypes)===Be&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0;){if(this.indentTypes.pop()!==Be)break}}}class Ye extends Me{constructor(e){super(new Ge("")),this.expressionWidth=e,this.length=0,this.trailingSpace=!1}add(...e){if(e.forEach((e=>this.addToLength(e))),this.length>this.expressionWidth)throw new Fe;super.add(...e)}addToLength(e){if("string"==typeof e)this.length+=e.length,this.trailingSpace=!1;else{if(e===be.MANDATORY_NEWLINE||e===be.NEWLINE)throw new Fe;e===be.INDENT||e===be.SINGLE_INDENT||e===be.SPACE?this.trailingSpace||(this.length++,this.trailingSpace=!0):e!==be.NO_NEWLINE&&e!==be.NO_SPACE||this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}}class Fe extends Error{}class Ve{constructor({cfg:e,dialectCfg:s,params:t,layout:r,inline:n=!1}){this.inline=!1,this.nodes=[],this.index=-1,this.cfg=e,this.dialectCfg=s,this.inline=n,this.params=t,this.layout=r}format(e){for(this.nodes=e,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(e){this.formatComments(e.leadingComments),this.formatNodeWithoutComments(e),this.formatComments(e.trailingComments)}formatNodeWithoutComments(e){switch(e.type){case ce.function_call:return this.formatFunctionCall(e);case ce.parameterized_data_type:return this.formatParameterizedDataType(e);case ce.array_subscript:return this.formatArraySubscript(e);case ce.property_access:return this.formatPropertyAccess(e);case ce.parenthesis:return this.formatParenthesis(e);case ce.between_predicate:return this.formatBetweenPredicate(e);case ce.case_expression:return this.formatCaseExpression(e);case ce.case_when:return this.formatCaseWhen(e);case ce.case_else:return this.formatCaseElse(e);case ce.clause:return this.formatClause(e);case ce.set_operation:return this.formatSetOperation(e);case ce.limit_clause:return this.formatLimitClause(e);case ce.all_columns_asterisk:return this.formatAllColumnsAsterisk(e);case ce.literal:return this.formatLiteral(e);case ce.identifier:return this.formatIdentifier(e);case ce.parameter:return this.formatParameter(e);case ce.operator:return this.formatOperator(e);case ce.comma:return this.formatComma(e);case ce.line_comment:return this.formatLineComment(e);case ce.block_comment:case ce.disable_comment:return this.formatBlockComment(e);case ce.data_type:return this.formatDataType(e);case ce.keyword:return this.formatKeywordNode(e)}}formatFunctionCall(e){this.withComments(e.nameKw,(()=>{this.layout.add(this.showFunctionKw(e.nameKw))})),this.formatNode(e.parenthesis)}formatParameterizedDataType(e){this.withComments(e.dataType,(()=>{this.layout.add(this.showDataType(e.dataType))})),this.formatNode(e.parenthesis)}formatArraySubscript(e){let s;switch(e.array.type){case ce.data_type:s=this.showDataType(e.array);break;case ce.keyword:s=this.showKw(e.array);break;default:s=this.showIdentifier(e.array)}this.withComments(e.array,(()=>{this.layout.add(s)})),this.formatNode(e.parenthesis)}formatPropertyAccess(e){this.formatNode(e.object),this.layout.add(be.NO_SPACE,e.operator),this.formatNode(e.property)}formatParenthesis(e){const s=this.formatInlineExpression(e.children);s?(this.layout.add(e.openParen),this.layout.add(...s.getLayoutItems()),this.layout.add(be.NO_SPACE,e.closeParen,be.SPACE)):(this.layout.add(e.openParen,be.NEWLINE),z(this.cfg)?(this.layout.add(be.INDENT),this.layout=this.formatSubExpression(e.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(be.INDENT),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(be.NEWLINE,be.INDENT,e.closeParen,be.SPACE))}formatBetweenPredicate(e){this.layout.add(this.showKw(e.betweenKw),be.SPACE),this.layout=this.formatSubExpression(e.expr1),this.layout.add(be.NO_SPACE,be.SPACE,this.showNonTabularKw(e.andKw),be.SPACE),this.layout=this.formatSubExpression(e.expr2),this.layout.add(be.SPACE)}formatCaseExpression(e){this.formatNode(e.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(e.expr),this.layout=this.formatSubExpression(e.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(be.NEWLINE,be.INDENT),this.formatNode(e.endKw)}formatCaseWhen(e){this.layout.add(be.NEWLINE,be.INDENT),this.formatNode(e.whenKw),this.layout=this.formatSubExpression(e.condition),this.formatNode(e.thenKw),this.layout=this.formatSubExpression(e.result)}formatCaseElse(e){this.layout.add(be.NEWLINE,be.INDENT),this.formatNode(e.elseKw),this.layout=this.formatSubExpression(e.result)}formatClause(e){this.isOnelineClause(e)?this.formatClauseInOnelineStyle(e):z(this.cfg)?this.formatClauseInTabularStyle(e):this.formatClauseInIndentedStyle(e)}isOnelineClause(e){return z(this.cfg)?this.dialectCfg.tabularOnelineClauses[e.nameKw.text]:this.dialectCfg.onelineClauses[e.nameKw.text]}formatClauseInIndentedStyle(e){this.layout.add(be.NEWLINE,be.INDENT,this.showKw(e.nameKw),be.NEWLINE),this.layout.indentation.increaseTopLevel(),this.layout.add(be.INDENT),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(e){this.layout.add(be.NEWLINE,be.INDENT,this.showKw(e.nameKw),be.SPACE),this.layout=this.formatSubExpression(e.children)}formatClauseInTabularStyle(e){this.layout.add(be.NEWLINE,be.INDENT,this.showKw(e.nameKw),be.SPACE),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(e){this.layout.add(be.NEWLINE,be.INDENT,this.showKw(e.nameKw),be.NEWLINE),this.layout.add(be.INDENT),this.layout=this.formatSubExpression(e.children)}formatLimitClause(e){this.withComments(e.limitKw,(()=>{this.layout.add(be.NEWLINE,be.INDENT,this.showKw(e.limitKw))})),this.layout.indentation.increaseTopLevel(),z(this.cfg)?this.layout.add(be.SPACE):this.layout.add(be.NEWLINE,be.INDENT),e.offset?(this.layout=this.formatSubExpression(e.offset),this.layout.add(be.NO_SPACE,",",be.SPACE),this.layout=this.formatSubExpression(e.count)):this.layout=this.formatSubExpression(e.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(e){this.layout.add("*",be.SPACE)}formatLiteral(e){this.layout.add(e.text,be.SPACE)}formatIdentifier(e){this.layout.add(this.showIdentifier(e),be.SPACE)}formatParameter(e){this.layout.add(this.params.get(e),be.SPACE)}formatOperator({text:e}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(e)?this.layout.add(be.NO_SPACE,e):":"===e?this.layout.add(be.NO_SPACE,e,be.SPACE):this.layout.add(e,be.SPACE)}formatComma(e){this.inline?this.layout.add(be.NO_SPACE,",",be.SPACE):this.layout.add(be.NO_SPACE,",",be.NEWLINE,be.INDENT)}withComments(e,s){this.formatComments(e.leadingComments),s(),this.formatComments(e.trailingComments)}formatComments(e){e&&e.forEach((e=>{e.type===ce.line_comment?this.formatLineComment(e):this.formatBlockComment(e)}))}formatLineComment(e){f(e.precedingWhitespace||"")?this.layout.add(be.NEWLINE,be.INDENT,e.text,be.MANDATORY_NEWLINE,be.INDENT):this.layout.getLayoutItems().length>0?this.layout.add(be.NO_NEWLINE,be.SPACE,e.text,be.MANDATORY_NEWLINE,be.INDENT):this.layout.add(e.text,be.MANDATORY_NEWLINE,be.INDENT)}formatBlockComment(e){e.type===ce.block_comment&&this.isMultilineBlockComment(e)?(this.splitBlockComment(e.text).forEach((e=>{this.layout.add(be.NEWLINE,be.INDENT,e)})),this.layout.add(be.NEWLINE,be.INDENT)):this.layout.add(e.text,be.SPACE)}isMultilineBlockComment(e){return f(e.text)||f(e.precedingWhitespace||"")}isDocComment(e){const s=e.split(/\n/);return/^\/\*\*?$/.test(s[0])&&s.slice(1,s.length-1).every((e=>/^\s*\*/.test(e)))&&/^\s*\*\/$/.test(L(s))}splitBlockComment(e){return this.isDocComment(e)?e.split(/\n/).map((e=>/^\s*\*/.test(e)?" "+e.replace(/^\s*/,""):e)):e.split(/\n/).map((e=>e.replace(/^\s*/,"")))}formatSubExpression(e){return new Ve({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(e)}formatInlineExpression(e){const s=this.params.getPositionalParameterIndex();try{return new Ve({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new Ye(this.cfg.expressionWidth),inline:!0}).format(e)}catch(t){if(t instanceof Fe)return void this.params.setPositionalParameterIndex(s);throw t}}formatKeywordNode(e){switch(e.tokenType){case R.RESERVED_JOIN:return this.formatJoin(e);case R.AND:case R.OR:case R.XOR:return this.formatLogicalOperator(e);default:return this.formatKeyword(e)}}formatJoin(e){z(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(be.NEWLINE,be.INDENT,this.showKw(e),be.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(be.NEWLINE,be.INDENT,this.showKw(e),be.SPACE)}formatKeyword(e){this.layout.add(this.showKw(e),be.SPACE)}formatLogicalOperator(e){"before"===this.cfg.logicalOperatorNewline?z(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(be.NEWLINE,be.INDENT,this.showKw(e),be.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(be.NEWLINE,be.INDENT,this.showKw(e),be.SPACE):this.layout.add(this.showKw(e),be.NEWLINE,be.INDENT)}formatDataType(e){this.layout.add(this.showDataType(e),be.SPACE)}showKw(e){return we(e.tokenType)?Ue(this.showNonTabularKw(e),this.cfg.indentStyle):this.showNonTabularKw(e)}showNonTabularKw(e){switch(this.cfg.keywordCase){case"preserve":return C(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}showFunctionKw(e){return we(e.tokenType)?Ue(this.showNonTabularFunctionKw(e),this.cfg.indentStyle):this.showNonTabularFunctionKw(e)}showNonTabularFunctionKw(e){switch(this.cfg.functionCase){case"preserve":return C(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}showIdentifier(e){if(e.quoted)return e.text;switch(this.cfg.identifierCase){case"preserve":return e.text;case"upper":return e.text.toUpperCase();case"lower":return e.text.toLowerCase()}}showDataType(e){switch(this.cfg.dataTypeCase){case"preserve":return C(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}}class We{constructor(e,s){this.dialect=e,this.cfg=s,this.params=new ee(this.cfg.params)}format(e){const s=this.parse(e);return this.formatAst(s).trimEnd()}parse(e){return function(e){let s={};const t=new Ne((t=>{return[...(r=e.tokenize(t,s),r.map(ae).map(oe).map(_e).map(Te).map(le)),p(t.length)];var r})),r=new De(Pe.fromCompiled(fe),{lexer:t});return{parse:(e,t)=>{s=t;const{results:n}=r.feed(e);if(1===n.length)return n[0];throw 0===n.length?new Error("Parse error: Invalid SQL"):new Error(`Parse error: Ambiguous grammar\n${JSON.stringify(n,void 0,2)}`)}}}(this.dialect.tokenizer).parse(e,this.cfg.paramTypes||{})}formatAst(e){return e.map((e=>this.formatStatement(e))).join("\n".repeat(this.cfg.linesBetweenQueries+1))}formatStatement(e){const s=new Ve({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new Me(new Ge((t=this.cfg,"tabularLeft"===t.indentStyle||"tabularRight"===t.indentStyle?" ".repeat(10):t.useTabs?"\t":" ".repeat(t.tabWidth))))}).format(e.children);var t;return e.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?s.add(be.NEWLINE,";"):s.add(be.NO_NEWLINE,";")),s.toString()}}class He extends Error{}function ve(e){const s=["multilineLists","newlineBeforeOpenParen","newlineBeforeCloseParen","aliasAs","commaPosition","tabulateAlias"];for(const r of s)if(r in e)throw new He(`${r} config is no more supported.`);if(e.expressionWidth<=0)throw new He(`expressionWidth config must be positive number. Received ${e.expressionWidth} instead.`);var t;if(e.params&&!((t=e.params)instanceof Array?t:Object.values(t)).every((e=>"string"==typeof e))&&console.warn('WARNING: All "params" option values should be strings.'),e.paramTypes&&!function(e){if(e.custom&&Array.isArray(e.custom))return e.custom.every((e=>""!==e.regex));return!0}(e.paramTypes))throw new He("Empty regex given in custom paramTypes. That would result in matching infinite amount of parameters.");return e}const ke={tabWidth:2,useTabs:!1,keywordCase:"preserve",identifierCase:"preserve",dataTypeCase:"preserve",functionCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},Ke=(e,s)=>{var{dialect:t}=s,r=function(e,s){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&s.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(r=Object.getOwnPropertySymbols(e);n<r.length;n++)s.indexOf(r[n])<0&&Object.prototype.propertyIsEnumerable.call(e,r[n])&&(t[r[n]]=e[r[n]])}return t}(s,["dialect"]);if("string"!=typeof e)throw new Error("Invalid query argument. Expected string, instead got "+typeof e);const n=ve(Object.assign(Object.assign({},ke),r));return new We((e=>{let s=j.get(e);return s||(s=Q(e),j.set(e,s)),s})(t),n).format(e)};export{He as ConfigError,y as duckdb,s as expandPhrases,Ke as formatDialect};
